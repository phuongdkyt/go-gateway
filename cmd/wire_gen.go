// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"go.uber.org/zap"
	"phuongnd/gateway/internal/cryto"
	"phuongnd/gateway/internal/middlewave"
	"phuongnd/gateway/internal/server"
	"phuongnd/gateway/internal/service"
	"phuongnd/gateway/internal/session"
	"phuongnd/gateway/pkg/redis"
)

// Injectors from wire.go:

func InitializeServer(ctx context.Context, log *zap.Logger) server.IServer {
	grpcServer := server.NewGRPCServer(log)
	crytoInterface := cryto.NewCrytoImpl(ctx, log)
	universalClient := redis.NewRedis(ctx, log)
	sessionInterface := session.NewSessionRepository(universalClient)
	iService := service.NewService(log, crytoInterface, sessionInterface)
	cryptoMiddleware := middleware.NewCryptoMiddleware(sessionInterface, crytoInterface, log)
	jwtMiddleware := middleware.NewJwtMiddleware(log)
	iServer := server.NewServer(ctx, log, grpcServer, iService, cryptoMiddleware, jwtMiddleware)
	return iServer
}
